			Anota√ß√µes GIT - CursoEmVideo



1- O que √© Git e GitHub: 
	Git = Software de controle de vers√£o
	GitHub = Plataforma de rede social para programadores

	1.1- Git:
		Versionamento √© o controle de vers√£o, podendo voltar para vers√µes antigas.

	1.2- GitHub:
		√â o local onde fica seus reposit√≥rios.

	1.3- Usando GitHub Desktop:

		1.3.1- Criar reposit√≥rio:
			Clique em file, depois em new repository. Coloque o nome do reposit√≥rio, uma descri√ß√£o e o local do salvamento dos arquivos. Marque a op√ß√£o do README e coloque a licen√ßa como MIT. Depois marque a op√ß√£o se quiser que o seu reposit√≥rio no GitHub seja privado, caso contrario desmarque.

		1.3.2- Criando commit:
			Marque as altera√ß√µes, coloque um summary(nome da altera√ß√£o) e clique em Commit to main.

		1.3.3- Colocando o commit no reposit√≥rio remoto:
			Ap√≥s ter feito os passos anteriores, aperte em Push origin. pronto seu reposit√≥rio est√° criado e salvo.

	1.4- Clonando um Reposit√≥rio:
		(1) Acessa o perfil de algu√©m e escolha o reposit√≥rio. (2) Aperte em code e depois em "Abrir com GitHub Desktop". (3) Escolha o local de salvamento dos arquivos no seu pc.

	1.5- Issues(problemas):
		√â um local para erros e problemas do reposit√≥rio, √© tipo um forum de ajuda do reposit√≥rio.

	1.6- Markdown:
		√â uma linguagem para gerenciar o README.md, issues ou pull requests.

		1.6.1- Negrito:
			Adicionar **(frase)**. EX: Ol√°, **Mundo**

		1.6.2- Texto riscado:
			Adicionar ~~(frase)~~. EX: Ol√°, ~~Mundo~~

		1.6.3- It√°lico:
			Adicionar _(frase)_. EX: Ol√°, _Mundo_

		1.6.4- T√≠tulo:
			Adicionar #(n√≠vel1), ##(n√≠vel2), ###(n√≠vel3). EX: # Meu t√≠tulo principal. EX2: ## Meu subt√≠tulo

		1.6.5- Linha horizontal(demarcada):
			Adicionar ***. EX: ***

		1.6.6- Lista numerada:
			Adicionar n√∫mero + . .EX: 1. Teste. EX2: 2. Teste 2

		1.6.7- Lista demarcada:
			Adicionar *. EX: * Caf√© * Arroz * Feij√£o

		1.6.8- Lista de tarefas:
			Adicionar -[ ]. e caso a tarefa esteja conclu√≠da colocar -[x]. EX: -[x] Acordar -[ ] Estudar -[ ] Almo√ßar

		1.6.9- Colocar imagem:
			Adicionar ![descri√ß√£o](url). EX: ![CursoEmVideo](https://cursoemvideo.com/logo.png)

		1.6.10- Colocar links:
			Adicionar [texto](url). EX: [Clique aqui para ir ao YouTube](https://youtube.com)

		1.6.11- Tabelas:
			Adicionar o nome seguido de |. 
			EX: ID | Nome | idade
				---|---|---
				1 | Gustavo | 26
				2 | Cristhian | 20
				3 | Ana | 19

		1.6.12- Trecho de c√≥digo
			Adicionar ``` (C√≥digo) ```. 
			EX:	```
				num = input("Digite um n√∫mero: ")
					if num % 2 = 0:
						printf("O n√∫mero √© IMPAR")
					else:
						printf("O n√∫mero √© PAR")
				```

		1.6.13- Emojis:
			Adicionar :(nome). EX: :hand :heart :monkey. >>Resultado: ‚úã ‚ù§Ô∏è üêí 

		1.6.14- Criar uma cita√ß√£o:
			Adicionar > (texto). > Ser√° que vai chover???

		1.6.14- Marcar pessoa na issue:
			Adicionar @. EX: @anaSantos

		1.6.15- Mencionar issues:
			Adicionar #. EX: Veja a issue #3

	1.7- Seguran√ßa no GitHub:
		1.7.1- Senhas fortes:
			Pelo menos 8 caracteres, letras e n√∫meros, mai√∫sculas e min√∫sculas, s√≠mbolos

		1.7.2- Autentica√ß√£o em 2 fatores:
			Baixar o app authenticator na playStore e sincronize com o GitHub.

	1.8- Branch(ramifica√ß√µes):
		S√£o usadas para separar o trabalho em equipes. Por exemplo tenho um c√≥digo base da master, tenho o c√≥digo da equipe de design e tenho o c√≥digo da equipe de conte√∫do. Cada um trabalhando com seu c√≥digo, no final de tudo quando estiver todos os c√≥digos prontos, a branch master pega os commit das branch de conte√∫do e design e mescla no arquivo de c√≥digo base.

		1.8.1- Criar branch:
			(1) Clique em Branch no GitHub Desktop. (2) Clique em New Branch. (3) Crie um nome e selecione a primeira op√ß√£o. (4) De um push para jogar no reposit√≥rio remoto.

		1.8.2- Usar a branch correta:
			Para modificar o c√≥digo da branch correta, basta apertar em "Current branch" e selecionar a branch, em seguida abrir no vs code.

		1.8.3- Commit tudo para a branch master:
			(1) Vai em branch. (2) Selecione "merge into current branch". (3) Selecione a branch criada para jogar na branch master. (4) Clique em "Create a merge commit". (5) De um push no reposit√≥rio remoto.

	1.9- GitGub Pages:
		(1) Escolha um reposit√≥rio. (2) Clique em Settings. (3) Clique em Pages. (4) Em branch escolha main e depois aperte em Save